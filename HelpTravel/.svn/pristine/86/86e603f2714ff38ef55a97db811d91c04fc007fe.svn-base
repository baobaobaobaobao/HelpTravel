/**
 * 
 */
package controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.sun.org.apache.xalan.internal.xsltc.compiler.sym;

import net.sf.json.JSONObject;
import po.Journey;
import po.Users;
import pojo.JourneyAndMsg;
import pojo.JourneyAndUsers;
import pojo.ListJourneyAndMsg;
import service.JourneyService;
import service.UserService;

@Controller
//为了对url进行分类管理 ，可以在这里定义根路径，最终访问url是根路径+子路径
//比如：商品列表：/items/queryItems.action
@RequestMapping("/Journey")
public class JourneyController {
@Autowired
private JourneyService JourneyService;
@Autowired
private UserService UserService;
	
/**
 * 
 * 编写者：鲍志强
 * 功能：随机获取默认交游信息
 * 参数：无
 *返回参数：一个或多个交游条目信息
 *日期：2.15
 */
@RequestMapping(value = "/defaultJourney")
@ResponseBody
public JourneyAndMsg GetJourney(){
	JourneyAndMsg journeyAndMsg=new JourneyAndMsg();
	journeyAndMsg.setJourneys(JourneyService.GetJourney());
	journeyAndMsg.setRows(JourneyService.GetJourneyCount());
	return  journeyAndMsg;
}

/**
 * 
 * 编写者：鲍志强
 * 功能：登入搜索界面
 * 参数：无
 *返回参数：无
 *日期：2-14
 */
@RequestMapping(value = "/search")
@ResponseBody
 public  ModelAndView  main() throws Exception {
	// 返回ModelAndView
			ModelAndView modelAndView = new ModelAndView();
			 modelAndView.setViewName("/main/search");
			return modelAndView;

}
/**
 * 
 * 编写者：
 * 功能：返回搜索交游信息
 * 参数：
 *返回参数：
 *日期：
 */
@RequestMapping(value = "/GetJourney")
@ResponseBody
public JourneyAndMsg GetJourneys(String message){
	
	JSONObject jsonObject = new JSONObject();
	jsonObject= JSONObject.fromObject(message);
	String searchContent = jsonObject.getString("searchContent");
	String msg=jsonObject.getString("msg");
    //System.out.println(searchContent+msg);
	Journey journey=new Journey();
	journey.setMotif(searchContent);
	JourneyAndMsg journeyAndMsg=new JourneyAndMsg();
	journeyAndMsg.setJourneys(JourneyService.GetJorneys(journey));
	journeyAndMsg.setRows(JourneyService.GetJorneys(journey).size());
	System.out.println(journeyAndMsg);
	return  journeyAndMsg;
}

/**
 * 
 * 编写者：
 * 功能：返回搜索交游信息
 * 参数：JId
 *返回参数：
 *日期：
 * @throws Exception 
 */
@RequestMapping(value = "/GetJourneyById")
@ResponseBody
public JourneyAndUsers GetJourneyById(String message) throws Exception{
	JSONObject jsonObject = new JSONObject();
	jsonObject= JSONObject.fromObject(message);
	String jidString = jsonObject.getString("jid");
	Integer  jid=Integer.valueOf(jidString);
    System.out.println(jid);
	Journey journey=new Journey();
	journey=	JourneyService.GetJorneyById(jid);
	JourneyAndUsers journeyAndUsers=new JourneyAndUsers();
	journeyAndUsers.setJourney(journey);
	journeyAndUsers.setUsers(UserService.GetUsersById(journey.getIssuerid()));
	return journeyAndUsers;
}
/**
 * 
 * 编写者：
 * 功能：跳到任务详情页面
 * 参数：
 *返回参数：
 *日期：
 */

@RequestMapping(value = "/GetJourneyDetail")
@ResponseBody
public ModelAndView GetJourneyDetail(){
	// 返回ModelAndView
	ModelAndView modelAndView = new ModelAndView();
	modelAndView.setViewName("/main/JourneyDetail");
	return modelAndView;
}

/**
 * 
 * 编写者：
 * 功能：跳到发布交游信息
 * 参数：
 *返回参数：
 *日期：
 */

@RequestMapping(value = "/GetJourneyPublish")
@ResponseBody
public ModelAndView GetJourneyPublish(){
	// 返回ModelAndView
	ModelAndView modelAndView = new ModelAndView();
	modelAndView.setViewName("/main/Publish");
	return modelAndView;
}
/**
 * 
 * 编写者：
 * 功能：跳到发布交游信息
 * 参数：
 *返回参数：
 *日期：
 * @throws IOException 
 */

@RequestMapping(value = "/InsertJourney")

public String InsertJourney(Journey  journey,HttpServletResponse response) throws IOException{
	// 返回ModelAndView
	System.out.print(journey);
	response.setContentType("text/html;charset=gb2312");
	PrintWriter out = response.getWriter();
	if(JourneyService.InsertJourney(journey)==0){
    out.print("<script language=\"javascript\">alert('登录失败！');window.location.href='/HelpTravel/Journey/GetJourneyPublish'</script>");
    return "/main/Publish";
    }else{
    	return "/My/MyPublish";
}	
}
/**
 * 
 * 编写者：
 * 功能：根据发布者id找到交游信息
 * 参数：issueid
 *返回参数：多条交游记录
 *日期：2.18
 */
@RequestMapping(value = "/GetJourneyByIssueId")
@ResponseBody
public ListJourneyAndMsg GetJourneyByIssueId(String  message) throws IOException{
	
	JSONObject jsonObject = new JSONObject();
	jsonObject= JSONObject.fromObject(message);
	String issueridString = jsonObject.getString("issuerid");
	Integer issuerid=Integer.valueOf(issueridString);
	String msg=jsonObject.getString("msg");
    //System.out.println(searchContent+msg);
	
	ListJourneyAndMsg listJourneyAndMsg=new ListJourneyAndMsg();
	listJourneyAndMsg.setJourney(JourneyService.GetJourneyByIssueId(issuerid));
	listJourneyAndMsg.setRows(JourneyService.GetJourneyByIssueId(issuerid).size());
	
	return  listJourneyAndMsg;
}

}
