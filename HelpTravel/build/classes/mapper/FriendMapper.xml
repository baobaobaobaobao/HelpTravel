<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.FriendMapper" >
  <resultMap id="BaseResultMap" type="po.Friend" >
    <id column="FId" property="fid" jdbcType="INTEGER" />
    <result column="UidOne" property="uidone" jdbcType="INTEGER" />
    <result column="UidTwo" property="uidtwo" jdbcType="INTEGER" />
    <result column="Friendship" property="friendship" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FId, UidOne, UidTwo, Friendship
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.FriendExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from friend
    where FId = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from friend
    where FId = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="po.FriendExample" >
    delete from friend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Friend" >
    insert into friend (FId, UidOne, UidTwo, 
      Friendship)
    values (#{fid,jdbcType=INTEGER}, #{uidone,jdbcType=INTEGER}, #{uidtwo,jdbcType=INTEGER}, 
      #{friendship,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="po.Friend" >
    insert into friend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        FId,
      </if>
      <if test="uidone != null" >
        UidOne,
      </if>
      <if test="uidtwo != null" >
        UidTwo,
      </if>
      <if test="friendship != null" >
        Friendship,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="uidone != null" >
        #{uidone,jdbcType=INTEGER},
      </if>
      <if test="uidtwo != null" >
        #{uidtwo,jdbcType=INTEGER},
      </if>
      <if test="friendship != null" >
        #{friendship,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.FriendExample" resultType="java.lang.Integer" >
    select count(*) from friend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update friend
    <set >
      <if test="record.fid != null" >
        FId = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.uidone != null" >
        UidOne = #{record.uidone,jdbcType=INTEGER},
      </if>
      <if test="record.uidtwo != null" >
        UidTwo = #{record.uidtwo,jdbcType=INTEGER},
      </if>
      <if test="record.friendship != null" >
        Friendship = #{record.friendship,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update friend
    set FId = #{record.fid,jdbcType=INTEGER},
      UidOne = #{record.uidone,jdbcType=INTEGER},
      UidTwo = #{record.uidtwo,jdbcType=INTEGER},
      Friendship = #{record.friendship,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Friend" >
    update friend
    <set >
      <if test="uidone != null" >
        UidOne = #{uidone,jdbcType=INTEGER},
      </if>
      <if test="uidtwo != null" >
        UidTwo = #{uidtwo,jdbcType=INTEGER},
      </if>
      <if test="friendship != null" >
        Friendship = #{friendship,jdbcType=INTEGER},
      </if>
    </set>
    where FId = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Friend" >
    update friend
    set UidOne = #{uidone,jdbcType=INTEGER},
      UidTwo = #{uidtwo,jdbcType=INTEGER},
      Friendship = #{friendship,jdbcType=INTEGER}
    where FId = #{fid,jdbcType=INTEGER}
  </update>
  <!-- 参与会加亲密度 -->
  <update id="addMyfriendShip" >
      
      update  friend,journey,jreceive
         set   friend.Friendship=Friendship+100 

 where friend.UidOne=#{uidtwo}
AND   friend.UidTwo=#{uidone}
AND    jreceive.JId=journey.JId
      
  </update>
</mapper>