<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.TravelmessageMapper" >
  <resultMap id="BaseResultMap" type="po.Travelmessage" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="Createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
   <resultMap id="TravelMessageResultMap" type="po.Travelmessage" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="Createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  
   <resultMap id="UserResultMap" type="po.Users" >
    <id column="UId" property="uid" jdbcType="INTEGER" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="PassWord" property="password" jdbcType="VARCHAR" />
    <result column="NickName" property="nickname" jdbcType="VARCHAR" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="AddressU" property="addressu" jdbcType="VARCHAR" />
    <result column="Education" property="education" jdbcType="VARCHAR" />
    <result column="Sex" property="sex" jdbcType="VARCHAR" />
    <result column="Birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="IdNo" property="idno" jdbcType="VARCHAR" />
    <result column="Tel" property="tel" jdbcType="VARCHAR" />
    <result column="State" property="state" jdbcType="INTEGER" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, uid, Createtime, text, title
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.TravelmessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travelmessage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from travelmessage
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from travelmessage
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="po.TravelmessageExample" >
    delete from travelmessage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Travelmessage" >
    insert into travelmessage (pid, uid, Createtime, 
      text, title)
    values (#{pid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, 
      #{text,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="po.Travelmessage" >
    insert into travelmessage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="createtime != null" >
        Createtime,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="title != null" >
        title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.TravelmessageExample" resultType="java.lang.Integer" >
    select count(*) from travelmessage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update travelmessage
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        Createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null" >
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update travelmessage
    set pid = #{record.pid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      Createtime = #{record.createtime,jdbcType=VARCHAR},
      text = #{record.text,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Travelmessage" >
    update travelmessage
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        Createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Travelmessage" >
    update travelmessage
    set uid = #{uid,jdbcType=INTEGER},
      Createtime = #{createtime,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  
    <select id="DefaultGetTravelMessage"  resultMap="TravelMessageResultMap">
          select travelmessage.* 
          from travelmessage   limit #{fisrtNum},#{nextNum};
    </select> 
    <!-- 根据pid找到uid，并且返回用户信息 -->
     <select id="GetUserByPid"   resultMap="UserResultMap">
         select users.* 
          from travelmessage,users 
          WHERE   travelmessage.uid=users.UId 
           AND travelmessage.pid=#{pid}
    </select> 
 
</mapper>