<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.JreceiveMapper" >
  <resultMap id="BaseResultMap" type="po.Jreceive" >
    <id column="JRId" property="jrid" jdbcType="INTEGER" />
    <result column="JId" property="jid" jdbcType="INTEGER" />
    <result column="RId" property="rid" jdbcType="INTEGER" />
    <result column="RTime" property="rtime" jdbcType="VARCHAR" />
    <result column="JRState" property="jrstate" jdbcType="INTEGER" />
    <result column="Content" property="content" jdbcType="VARCHAR" />
    <result column="CDate" property="cdate" jdbcType="VARCHAR" />
    <result column="CState" property="cstate" jdbcType="INTEGER" />
  </resultMap>
  
   <resultMap id="JourneyResultMap" type="po.Journey" >
    <id column="JId" property="jid" jdbcType="INTEGER" />
    <result column="Motif" property="motif" jdbcType="VARCHAR" />
    <result column="ExecuteTime" property="executetime" jdbcType="VARCHAR" />
    <result column="Address" property="address" jdbcType="VARCHAR" />
    <result column="Reward" property="reward" jdbcType="INTEGER" />
    <result column="Request" property="request" jdbcType="VARCHAR" />
    <result column="ToTime" property="totime" jdbcType="VARCHAR" />
    <result column="ConTent" property="content" jdbcType="VARCHAR" />
    <result column="TId" property="tid" jdbcType="INTEGER" />
    <result column="MaxQuantity" property="maxquantity" jdbcType="INTEGER" />
    <result column="IssueRId" property="issuerid" jdbcType="INTEGER" />
    <result column="Astate" property="astate" jdbcType="INTEGER" />
    <result column="IssueTime" property="issuetime" jdbcType="VARCHAR" />
  </resultMap>
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    JRId, JId, RId, RTime, JRState, Content, CDate, CState
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.JreceiveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jreceive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jreceive
    where JRId = #{jrid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jreceive
    where JRId = #{jrid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="po.JreceiveExample" >
    delete from jreceive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Jreceive" >
    insert into jreceive (JRId, JId, RId, 
      RTime, JRState, Content, 
      CDate, CState)
    values (#{jrid,jdbcType=INTEGER}, #{jid,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER}, 
      #{rtime,jdbcType=VARCHAR}, #{jrstate,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{cdate,jdbcType=VARCHAR}, #{cstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="po.Jreceive" >
    insert into jreceive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jrid != null" >
        JRId,
      </if>
      <if test="jid != null" >
        JId,
      </if>
      <if test="rid != null" >
        RId,
      </if>
      <if test="rtime != null" >
        RTime,
      </if>
      <if test="jrstate != null" >
        JRState,
      </if>
      <if test="content != null" >
        Content,
      </if>
      <if test="cdate != null" >
        CDate,
      </if>
      <if test="cstate != null" >
        CState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jrid != null" >
        #{jrid,jdbcType=INTEGER},
      </if>
      <if test="jid != null" >
        #{jid,jdbcType=INTEGER},
      </if>
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="rtime != null" >
        #{rtime,jdbcType=VARCHAR},
      </if>
      <if test="jrstate != null" >
        #{jrstate,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null" >
        #{cdate,jdbcType=VARCHAR},
      </if>
      <if test="cstate != null" >
        #{cstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.JreceiveExample" resultType="java.lang.Integer" >
    select count(*) from jreceive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jreceive
    <set >
      <if test="record.jrid != null" >
        JRId = #{record.jrid,jdbcType=INTEGER},
      </if>
      <if test="record.jid != null" >
        JId = #{record.jid,jdbcType=INTEGER},
      </if>
      <if test="record.rid != null" >
        RId = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.rtime != null" >
        RTime = #{record.rtime,jdbcType=VARCHAR},
      </if>
      <if test="record.jrstate != null" >
        JRState = #{record.jrstate,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        Content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.cdate != null" >
        CDate = #{record.cdate,jdbcType=VARCHAR},
      </if>
      <if test="record.cstate != null" >
        CState = #{record.cstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jreceive
    set JRId = #{record.jrid,jdbcType=INTEGER},
      JId = #{record.jid,jdbcType=INTEGER},
      RId = #{record.rid,jdbcType=INTEGER},
      RTime = #{record.rtime,jdbcType=VARCHAR},
      JRState = #{record.jrstate,jdbcType=INTEGER},
      Content = #{record.content,jdbcType=VARCHAR},
      CDate = #{record.cdate,jdbcType=VARCHAR},
      CState = #{record.cstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Jreceive" >
    update jreceive
    <set >
      <if test="jid != null" >
        JId = #{jid,jdbcType=INTEGER},
      </if>
      <if test="rid != null" >
        RId = #{rid,jdbcType=INTEGER},
      </if>
      <if test="rtime != null" >
        RTime = #{rtime,jdbcType=VARCHAR},
      </if>
      <if test="jrstate != null" >
        JRState = #{jrstate,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        Content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null" >
        CDate = #{cdate,jdbcType=VARCHAR},
      </if>
      <if test="cstate != null" >
        CState = #{cstate,jdbcType=INTEGER},
      </if>
    </set>
    where JRId = #{jrid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Jreceive" >
    update jreceive
    set JId = #{jid,jdbcType=INTEGER},
      RId = #{rid,jdbcType=INTEGER},
      RTime = #{rtime,jdbcType=VARCHAR},
      JRState = #{jrstate,jdbcType=INTEGER},
      Content = #{content,jdbcType=VARCHAR},
      CDate = #{cdate,jdbcType=VARCHAR},
      CState = #{cstate,jdbcType=INTEGER}
    where JRId = #{jrid,jdbcType=INTEGER}
  </update>
  
  <select id="getJourneyByRId" parameterType="java.lang.Integer" resultMap="JourneyResultMap">
       SELECT journey.*
        FROM journey,jreceive
        WHERE journey.JId=jreceive.JId AND jreceive.RId=#{id} 
        </select> 
  
</mapper>